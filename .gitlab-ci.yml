stages:
  - test
  - docker
  - helm

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
sonarcloud-check:
  stage: test
  image: maven:3.6.3-jdk-11
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd backend
    - mvn verify sonar:sonar -Dsonar.projectKey=xdev-tech_star
  only:
    - merge_requests
    - master
    - develop

helm-lint:
  stage: test
  image: registry.gitlab.com/xdev-tech/build/helm:2.0
  allow_failure: true
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/star
    - lint helm/star --values helm/star/values-dev.yaml

test:
  image: registry.gitlab.com/xdev-tech/build/deploy:2.0
  script:
    - kubectl config get-contexts
    - kubectl get pod -A
  only:
    - develop

docker-keycloak:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:2.0
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/keycloak:lastet helm/star keycloak

docker-backend:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:2.0
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/backend helm/star backend

docker-frontend:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:2.0
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/frontend helm/star frontend

helm:
  stage: helm
  image: registry.gitlab.com/xdev-tech/build/helm:2.0
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/star
    #  .keycloak.image.tag
    - build $CI_REGISTRY_IMAGE/helm/star ./helm/star
