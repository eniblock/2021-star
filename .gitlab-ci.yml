stages:
  - test
  - docker
  - helm
  - deploy

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  HLF_K8S_VERSION: 0.1.0-develop.52

sonarcloud-check:
  stage: test
  image: maven:3.6.3-jdk-11
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd backend
    - mvn verify sonar:sonar -Dsonar.projectKey=xdev-tech_star
  only:
    - merge_requests
    - master
    - develop

helm-lint:
  stage: test
  image: registry.gitlab.com/xdev-tech/build/helm:3.1
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/star
    - lint star helm/star --values helm/star/values-rte-dev.yaml

test:
  image: registry.gitlab.com/xdev-tech/build/deploy:3.1
  script:
    - kubectl config get-contexts
    - kubectl get pod -A
  only:
    - develop

docker-chaincode:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:3.1
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/chaincode helm/star chaincode

docker-keycloak:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:3.1
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/keycloak helm/star keycloak

docker-backend:
  stage: docker
  image:
    name: registry.gitlab.com/xdev-tech/build/docker:3.1
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - build_with_helm_tag $CI_REGISTRY_IMAGE/backend helm/star backend

docker-frontend:
  image:
    name: registry.gitlab.com/xdev-tech/build/earthly:3.2
  stage: docker
  script:
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - earthly-daemonless --ci --push ./frontend/+docker $(tag-opts helm/star)

helm:
  stage: helm
  image: registry.gitlab.com/xdev-tech/build/helm:3.1
  script:
    - helm registry login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - helm dependency update ./helm/star
    #  .keycloak.image.tag
    - build $CI_REGISTRY_IMAGE/helm/star ./helm/star

.deploy_star:
  stage: deploy
  image: registry.gitlab.com/xdev-tech/build/deploy:3.1
  variables:
  script:
    - chmod 600 $KUBECONFIG
    - dockerhublogin
    - star_version=`yq eval .version helm/star/Chart.yaml`
    - if [ -z "$CI_COMMIT_TAG" ]; then star_version=$star_version-$CI_COMMIT_REF_SLUG; fi
    - helm repo add hlf-k8s https://gitlab.com/api/v4/projects/30449896/packages/helm/dev
    - helm repo update
    - kubectl delete -n ${CI_ENVIRONMENT_NAME} job --all
    # orderer
    - helm upgrade --install --wait --timeout 8m --version $HLF_K8S_VERSION
      $(yq e .releaseName helm/hlf-ord/values-${CI_ENVIRONMENT_NAME}.yaml) hlf-k8s/hlf-ord
      -n $(yq e .namespace helm/hlf-ord/values-${CI_ENVIRONMENT_NAME}.yaml)
      --post-renderer kbldpp
      --values helm/hlf-ord/values-${CI_ENVIRONMENT_NAME}.yaml
    # peers
    - helm upgrade --install --wait --timeout 8m --version $HLF_K8S_VERSION
      peer1 hlf-k8s/hlf-peer
      -n ${CI_ENVIRONMENT_NAME}
      --post-renderer kbldpp
      --values helm/hlf-peer/values-${CI_ENVIRONMENT_NAME}-peer1.yaml
      --set "peer.chaincodes[0].image.tag=$star_version"
    - env KUBECONFIG=$KUBECONFIG2 helm upgrade --install --wait --timeout 8m --version $HLF_K8S_VERSION
      peer2 hlf-k8s/hlf-peer
      -n ${CI_ENVIRONMENT_NAME}
      --post-renderer kbldpp
      --values helm/hlf-peer/values-${CI_ENVIRONMENT_NAME}-peer2.yaml
      --set "peer.chaincodes[0].image.tag=$star_version"
    # star
    - helm dependency update ./helm/star
    - helm upgrade --install --wait --timeout 8m
      star ./helm/star
      -n ${CI_ENVIRONMENT_NAME}
      --post-renderer kbldpp
      --values helm/star/values-${CI_ENVIRONMENT_NAME}.yaml
      --values "$USERS"
      --set image.tag=$star_version
      --set keycloak.image.tag=$star_version
      --set mail.username=$SMTP_USER
      --set mail.password=$SMTP_PASSWORD

# testing

deploy-enedis-testing:
  extends: .deploy_star
  environment:
    name: enedis-testing
  only:
    - develop

deploy-rte-testing:
  extends: .deploy_star
  environment:
    name: rte-testing
  only:
    - develop

deploy-producer-testing:
  extends: .deploy_star
  environment:
    name: producer-testing
  only:
    - develop

# staging

deploy-enedis-staging:
  extends: .deploy_star
  environment:
    name: enedis-staging
  only:
    - staging

deploy-rte-staging:
  extends: .deploy_star
  environment:
    name: rte-staging
  only:
    - staging

deploy-producer-staging:
  extends: .deploy_star
  environment:
    name: producer-staging
  only:
    - staging


# prod

deploy-enedis-prod:
  extends: .deploy_star
  environment:
    name: enedis-prod
  only:
    - prod

deploy-producer-prod:
  extends: .deploy_star
  environment:
    name: producer-prod
  only:
    - prod

deploy-rte-prod:
  extends: .deploy_star
  environment:
    name: rte-prod
  only:
    - prod
